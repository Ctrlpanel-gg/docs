"use strict";(self.webpackChunkctrlpanel=self.webpackChunkctrlpanel||[]).push([[2956],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),h=l,m=d["".concat(s,".").concat(h)]||d[h]||c[h]||r;return n?a.createElement(m,o(o({ref:t},u),{},{components:n})):a.createElement(m,o({ref:t},u))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),l=n(6010);const r="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>y});var a=n(3117),l=n(7294),r=n(6010),o=n(2466),i=n(6550),s=n(1980),p=n(7392),u=n(12);function c(e){return function(e){return l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:l}}=e;return{value:t,label:n,attributes:a,default:l}}))}function d(e){const{values:t,children:n}=e;return(0,l.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(r),(0,l.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=d(e),[o,i]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[s,p]=m({queryString:n,groupId:a}),[c,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,u.Nk)(n);return[a,(0,l.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),k=(()=>{const e=s??c;return h({value:e,tabValues:r})?e:null})();(0,l.useLayoutEffect)((()=>{k&&i(k)}),[k]);return{selectedValue:o,selectValue:(0,l.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),p(e),g(e)}),[p,g,r]),tabValues:r}}var k=n(2389);const f="tabList__CuJ",v="tabItem_LNqP";function b(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),a=p[n].value;a!==i&&(c(t),s(a))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:o}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:h,onClick:d},o,{className:(0,r.Z)("tabs__item",v,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function w(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=g(e);return l.createElement("div",{className:(0,r.Z)("tabs-container",f)},l.createElement(b,(0,a.Z)({},e,t)),l.createElement(w,(0,a.Z)({},e,t)))}function y(e){const t=(0,k.Z)();return l.createElement(N,(0,a.Z)({key:String(t)},e))}},4978:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var a=n(3117),l=(n(7294),n(3905)),r=n(4866),o=n(5162);const i={sidebar_position:5},s="Updating",p={unversionedId:"Installation/updating",id:"version-1.0/Installation/updating",title:"Updating",description:"This guide is for updates 0.9.X -> 1.0.0",source:"@site/versioned_docs/version-1.0/Installation/updating.md",sourceDirName:"Installation",slug:"/Installation/updating",permalink:"/docs/Installation/updating",draft:!1,editUrl:"https://github.com/Ctrlpanel-gg/docs/tree/main/versioned_docs/version-1.0/Installation/updating.md",tags:[],version:"1.0",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"version-1.0/tutorialSidebar",previous:{title:"Troubleshooting",permalink:"/docs/Installation/troubleshooting"},next:{title:"Contributing",permalink:"/docs/Contributing/"}},u={},c=[{value:"Enable Maintenance Mode",id:"enable-maintenance-mode",level:2},{value:"Name change",id:"name-change",level:2},{value:"Directory",id:"directory",level:3},{value:"Queue Listeners",id:"queue-listeners",level:3},{value:"Crontab",id:"crontab",level:4},{value:"Queue Worker",id:"queue-worker",level:4},{value:"Database",id:"database",level:3},{value:"Enter mysql shell",id:"enter-mysql-shell",level:4},{value:"Create new database and user",id:"create-new-database-and-user",level:4},{value:"Transfer data from the old database to the new one",id:"transfer-data-from-the-old-database-to-the-new-one",level:4},{value:"Update user privileges",id:"update-user-privileges",level:4},{value:"Update the connection data in the .env file",id:"update-the-connection-data-in-the-env-file",level:4},{value:"Nginx",id:"nginx",level:3},{value:"Updating PHP version",id:"updating-php-version",level:2},{value:"Check your current PHP version",id:"check-your-current-php-version",level:3},{value:"Installing PHP 8.3",id:"installing-php-83",level:3},{value:"Checking if PHP 8.3 used by default",id:"checking-if-php-83-used-by-default",level:3},{value:"Change PHP-FPM version for CtrlPanel&#39;s nginx config",id:"change-php-fpm-version-for-ctrlpanels-nginx-config",level:3},{value:"Pulling the New Files",id:"pulling-the-new-files",level:2},{value:"Update Dependencies",id:"update-dependencies",level:2},{value:"Updating the Database",id:"updating-the-database",level:2},{value:"Clear Compiled Template Cache",id:"clear-compiled-template-cache",level:2},{value:"Set Permissions",id:"set-permissions",level:2},{value:"Restarting Queue Workers",id:"restarting-queue-workers",level:2},{value:"Disable Maintenance Mode",id:"disable-maintenance-mode",level:2},{value:"Disclaimer",id:"disclaimer",level:2}],d={toc:c};function h(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"updating"},"Updating"),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"This guide is for updates 0.9.X -> 1.0.0"),(0,l.kt)("p",{parentName:"admonition"},"If you update from 0.8.X or older, please follow our 0.9 update guide which can be found ",(0,l.kt)("a",{parentName:"p",href:"/docs/0.9/Installation/updating"},"here"),".",(0,l.kt)("br",null),"\nIf you want to upgrade from version 1.0.0 to 1.0.1 or newer, use ",(0,l.kt)("a",{parentName:"p",href:"/docs/1.0.1/Installation/updating"},"this")," guide")),(0,l.kt)("h2",{id:"enable-maintenance-mode"},"Enable Maintenance Mode"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd /var/www/controlpanel\nsudo php artisan down\n")),(0,l.kt)("h2",{id:"name-change"},"Name change"),(0,l.kt)("p",null,"In April 2023, CtrlPanel changed its name from ControlPanel to CtrlPanel. For a long time we continued to use the old name in the names of directories, databases and other things, but it's time to finally abandon the old name. This guide will help you do this, just read the description of the commands carefully and execute them in the correct order"),(0,l.kt)("h3",{id:"directory"},"Directory"),(0,l.kt)("p",null,"Let's start with a simple one, change the name of the directory"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"mv /var/www/controlpanel/ /var/www/ctrlpanel/\n")),(0,l.kt)("p",null,"And now let's move into it in advance ",(0,l.kt)("strong",{parentName:"p"},":)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd /var/www/ctrlpanel/\n")),(0,l.kt)("h3",{id:"queue-listeners"},"Queue Listeners"),(0,l.kt)("p",null,"Well, great, we've taken the first steps. Let's fix the directory in the path of the crontab and the queue worker"),(0,l.kt)("h4",{id:"crontab"},"Crontab"),(0,l.kt)("p",null,"Go to the crontab editor using the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"crontab -e\n")),(0,l.kt)("p",null,"Find the line related to CtrlPanel, it will look something like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* * * * * php /var/www/controlpanel/artisan schedule:run >> /dev/null 2>&1\n")),(0,l.kt)("p",null,"Change ",(0,l.kt)("inlineCode",{parentName:"p"},"controlpanel")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"ctrlpanel")," in directory name. You should get the following result, you can just copy and paste the following line instead of the old one:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* * * * * php /var/www/ctrlpanel/artisan schedule:run >> /dev/null 2>&1\n")),(0,l.kt)("p",null,"Now save the file, if you are using ",(0,l.kt)("inlineCode",{parentName:"p"},"nano")," then press ",(0,l.kt)("inlineCode",{parentName:"p"},"Ctrl+X"),", press ",(0,l.kt)("inlineCode",{parentName:"p"},"Y"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"Enter")),(0,l.kt)("h4",{id:"queue-worker"},"Queue Worker"),(0,l.kt)("p",null,"Now let's fix the queue worker, a pretty easy task."),(0,l.kt)("p",null,"First, let's define the name of your queue worker file, it can be called either ",(0,l.kt)("inlineCode",{parentName:"p"},"ctrlpanel.service")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"controlpanel.service"),". We have prepared command that will simplify this task. Just copy and paste it into your terminal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'QUEUE_WORKER_FIND=\'[ -f /etc/systemd/system/ctrlpanel.service ] && echo -e "\\nFile name: ctrlpanel.service" || ([ -f /etc/systemd/system/controlpanel.service ] && echo -e "\\nFile name: controlpanel.service" || echo -e "\\nQueue Worker not found!")\'\neval $QUEUE_WORKER_FIND\n')),(0,l.kt)("p",null,"After executing the command, you will see the name of your file in the console.\nDepending on the file name, the procedure will be slightly different. Select the appropriate tab below:"),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"ctrlpanel.service",label:"CtrlPanel.service",default:!0,mdxType:"TabItem"},"Great. Let's fix the queue worker so that it works in the newly renamed directory. First, let's stop and unload it",(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl stop ctrlpanel.service\nsystemctl disable ctrlpanel.service\n"))),(0,l.kt)(o.Z,{value:"controlpanel.service",label:"ControlPanel.service",mdxType:"TabItem"},"Great. Let's fix the queue worker so that it works in the newly renamed directory. First, let's stop and unload it",(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl stop controlpanel.service\nsystemctl disable controlpanel.service\n")),(0,l.kt)("p",null,"Let's rename the file. To do this, run the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"mv /etc/systemd/system/controlpanel.service /etc/systemd/system/ctrlpanel.service\n")))),(0,l.kt)("p",null,"Now we can edit the paths, let's open the file with the command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"nano /etc/systemd/system/ctrlpanel.service\n")),(0,l.kt)("p",null,"Find the line ",(0,l.kt)("inlineCode",{parentName:"p"},"ExecStart=/usr/bin/php /var/www/controlpanel/artisan queue:work --sleep=3 --tries=3")," and replace ",(0,l.kt)("inlineCode",{parentName:"p"},"controlpanel")," with ",(0,l.kt)("inlineCode",{parentName:"p"},"ctrlpanel")," in directory path"),(0,l.kt)("p",null,"The final file should look like this, you can also just copy and paste the contents below instead of the old one:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Ctrlpanel Queue Worker File\n# ----------------------------------\n\n[Unit]\nDescription=Ctrlpanel Queue Worker\n\n[Service]\n# On some systems the user and group might be different.\n# Some systems use `apache` or `nginx` as the user and group.\nUser=www-data\nGroup=www-data\nRestart=always\nExecStart=/usr/bin/php /var/www/ctrlpanel/artisan queue:work --sleep=3 --tries=3\nStartLimitBurst=0\n\n[Install]\nWantedBy=multi-user.target\n")),(0,l.kt)("p",null,"Now save the file, if you are using ",(0,l.kt)("inlineCode",{parentName:"p"},"nano")," then press ",(0,l.kt)("inlineCode",{parentName:"p"},"Ctrl+X"),", press ",(0,l.kt)("inlineCode",{parentName:"p"},"Y"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"Enter")),(0,l.kt)("p",null,"Let's load service, and also check if it is running. To do this, run the following commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# Load service and enable it\nsystemctl enable --now ctrlpanel.service\n\n# Check status, it should be "Active: active (running)"\nsystemctl status ctrlpanel.service\n')),(0,l.kt)("p",null,"Congratulations, you have finished updating the queue worker"),(0,l.kt)("h3",{id:"database"},"Database"),(0,l.kt)("p",null,"Let's rename the database, as well as the user used to connect"),(0,l.kt)("h4",{id:"enter-mysql-shell"},"Enter mysql shell"),(0,l.kt)("p",null,"To do this, enter this command in the terminal:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"mysql -u root -p\n")),(0,l.kt)("h4",{id:"create-new-database-and-user"},"Create new database and user"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Please change the ",(0,l.kt)("inlineCode",{parentName:"p"},"USE_YOUR_OWN_PASSWORD")," part to your password. Also, 127.0.0.1 is for localhost, \u0441hange this if the database is on a separate server.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DATABASE ctrlpanel;\nCREATE USER 'ctrlpaneluser'@'127.0.0.1' IDENTIFIED BY 'USE_YOUR_OWN_PASSWORD';\nGRANT ALL PRIVILEGES ON ctrlpanel.* TO 'ctrlpaneluser'@'127.0.0.1';\nFLUSH PRIVILEGES;\nEXIT;\n")),(0,l.kt)("h4",{id:"transfer-data-from-the-old-database-to-the-new-one"},"Transfer data from the old database to the new one"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"mysqldump -u root -p controlpanel > /var/www/ctrlpanel/transfer.sql\nmysql -u root -p ctrlpanel < /var/www/ctrlpanel/transfer.sql\n")),(0,l.kt)("h4",{id:"update-user-privileges"},"Update user privileges"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"GRANT ALL PRIVILEGES ON ctrlpanel.* TO 'ctrlpaneluser'@'127.0.0.1';\nFLUSH PRIVILEGES;\nEXIT;\n")),(0,l.kt)("h4",{id:"update-the-connection-data-in-the-env-file"},"Update the connection data in the .env file"),(0,l.kt)("p",null,"We have changed the name of the database and the user, now we need to change the names in the .env file so that ctrlpanel can access them."),(0,l.kt)("p",null,"Let's open the .env file located in the CtrlPanel directory, run the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"nano /var/www/ctrlpanel/.env\n")),(0,l.kt)("p",null,"Find the section that contains the data for connecting to your MySQL server, it looks something like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"### --- DB Settings (required) --- ###\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=controlpanel\nDB_USERNAME=controlpaneluser\nDB_PASSWORD=YOUR_OWN_PASSWORD\n### --- DB Settings End --- ###\n")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"If your password contains special characters, escape it using double quotes"),(0,l.kt)("pre",{parentName:"admonition"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'DB_PASSWORD="YOUR_OWN_PASSWORD"\n'))),(0,l.kt)("p",null,"Replace the variables ",(0,l.kt)("inlineCode",{parentName:"p"},"DB_DATABASE"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"DB_USERNAME")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"DB_PASSWORD")," with new ones, the result should look something like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"### --- DB Settings (required) --- ###\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=ctrlpanel\nDB_USERNAME=ctrlpaneluser\nDB_PASSWORD=YOUR_OWN_PASSWORD\n### --- DB Settings End --- ###\n")),(0,l.kt)("p",null,"Now save the file, if you are using ",(0,l.kt)("inlineCode",{parentName:"p"},"nano")," then press ",(0,l.kt)("inlineCode",{parentName:"p"},"Ctrl+X"),", press ",(0,l.kt)("inlineCode",{parentName:"p"},"Y"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"Enter")),(0,l.kt)("h3",{id:"nginx"},"Nginx"),(0,l.kt)("p",null,"The last step, let's change the directory in the nginx configuration for your CtrlPanel"),(0,l.kt)("p",null,"Let's define the name of your configuration file, to do this, run this command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'NGINX_FIND=\'[ -f /etc/nginx/sites-enabled/ctrlpanel.conf ] && echo -e "\\nFile name: ctrlpanel.conf" || ([ -f /etc/nginx/sites-enabled/controlpanel.conf ] && echo -e "\\nFile name: controlpanel.conf" || echo -e "\\nNginx configuration not found!")\'\neval $NGINX_FIND\n')),(0,l.kt)("p",null,"After executing the command, you will see the name of your file in the console.\nDepending on the file name, the procedure will be slightly different. Select the appropriate tab below:"),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"ctrlpanel.conf",label:"CtrlPanel.conf",default:!0,mdxType:"TabItem"}),(0,l.kt)(o.Z,{value:"controlpanel.conf",label:"ControlPanel.conf",mdxType:"TabItem"},(0,l.kt)("p",null,"Let's delete the symlink, rename the file, and create a symlink with the correct name. The commands are attached below as always ",(0,l.kt)("strong",{parentName:"p"},":D")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Delete old symlink\nrm -rf /etc/nginx/sites-enabled/controlpanel.conf\n\n# Rename existing configuration file\nmv /etc/nginx/sites-available/controlpanel.conf /etc/nginx/sites-available/ctrlpanel.conf\n\n# Create symlink with new name\nln -s /etc/nginx/sites-available/ctrlpanel.conf /etc/nginx/sites-enabled/ctrlpanel.conf\n")))),(0,l.kt)("p",null,"Open the file, enter the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"nano /etc/nginx/sites-available/ctrlpanel.conf\n")),(0,l.kt)("p",null,"Find the following line"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-conf"},"root /var/www/controlpanel/public;\n")),(0,l.kt)("p",null,"and change directory name to the ",(0,l.kt)("inlineCode",{parentName:"p"},"ctrlpanel")," instead of ",(0,l.kt)("inlineCode",{parentName:"p"},"controlpanel"),".\nYou should get the following result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-conf"},"root /var/www/ctrlpanel/public;\n")),(0,l.kt)("p",null,"Now save the file, if you are using ",(0,l.kt)("inlineCode",{parentName:"p"},"nano")," then press ",(0,l.kt)("inlineCode",{parentName:"p"},"Ctrl+X"),", press ",(0,l.kt)("inlineCode",{parentName:"p"},"Y"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"Enter")),(0,l.kt)("p",null,"Don't forget to check the configuration, and restart nginx for the changes to take effect"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Check for nginx errors\nnginx -t\n\n# Restart nginx to apply changes\nsystemctl restart nginx\n")),(0,l.kt)("h2",{id:"updating-php-version"},"Updating PHP version"),(0,l.kt)("p",null,"CtrlPanel 1.0.0 has been updated to Laravel 11, which requires a minimum version of PHP 8.2. We will help you upgrade your used version of php to 8.3. It will not take much time, provided that you are careful."),(0,l.kt)("h3",{id:"check-your-current-php-version"},"Check your current PHP version"),(0,l.kt)("p",null,"To do this, run the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"php -v\n")),(0,l.kt)("p",null,"If you see version 8.1 or lower, then you need to install PHP 8.2 or higher, as well as all the necessary extensions.\nIf you see 8.2 or higher, you can skip next steps, but make sure that you have all the necessary extensions and your nginx uses the correct PHP-FPM."),(0,l.kt)("h3",{id:"installing-php-83"},"Installing PHP 8.3"),(0,l.kt)("p",null,"Update the package list, and install PHP 8.3 from the apt repository"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"apt update\napt -y install php8.3 php8.3-{common,cli,gd,mysql,mbstring,bcmath,xml,fpm,curl,zip,intl,redis}\n")),(0,l.kt)("h3",{id:"checking-if-php-83-used-by-default"},"Checking if PHP 8.3 used by default"),(0,l.kt)("p",null,"After installing the required PHP version, let's make sure that it is installed by default for the ",(0,l.kt)("inlineCode",{parentName:"p"},"php")," command. This is important for the correct operation of the CtrlPanel"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"php -v\n")),(0,l.kt)("p",null,"If you see version 8.3, then everything is fine, and you can skip next step, if the PHP version is still 8.1 or lower, then update the default version for the ",(0,l.kt)("inlineCode",{parentName:"p"},"php")," commamd using the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"update-alternatives --set php /usr/bin/php8.3\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: Path may vary depending on your system. This is just an example")),(0,l.kt)("h3",{id:"change-php-fpm-version-for-ctrlpanels-nginx-config"},"Change PHP-FPM version for CtrlPanel's nginx config"),(0,l.kt)("p",null,"Open the file, enter the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"nano /etc/nginx/sites-available/ctrlpanel.conf\n")),(0,l.kt)("p",null,"Find the following line inside ",(0,l.kt)("inlineCode",{parentName:"p"},"location ~ \\.php$")," block"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: The version may vary, but it should not be lower than ",(0,l.kt)("inlineCode",{parentName:"p"},"8.2"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-conf"},"fastcgi_pass unix:/run/php/php8.1-fpm.sock;\n")),(0,l.kt)("p",null,"and change PHP-FPM socket version to ",(0,l.kt)("inlineCode",{parentName:"p"},"8.3"),". You should get the following result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-conf"},"fastcgi_pass unix:/run/php/php8.3-fpm.sock;\n")),(0,l.kt)("p",null,"Now save the file, if you are using ",(0,l.kt)("inlineCode",{parentName:"p"},"nano")," then press ",(0,l.kt)("inlineCode",{parentName:"p"},"Ctrl+X"),", press ",(0,l.kt)("inlineCode",{parentName:"p"},"Y"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"Enter")),(0,l.kt)("p",null,"Check the configuration, and restart nginx for the changes to take effect"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Check for nginx errors\nnginx -t\n\n# Restart nginx to apply changes\nsystemctl restart nginx\n")),(0,l.kt)("p",null,"Congratulations! Everything is ready, you can continue updating ",(0,l.kt)("strong",{parentName:"p"},":3")),(0,l.kt)("h2",{id:"pulling-the-new-files"},"Pulling the New Files"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo git stash\nsudo git pull\nsudo chmod -R 755 /var/www/ctrlpanel\n")),(0,l.kt)("h2",{id:"update-dependencies"},"Update Dependencies"),(0,l.kt)("admonition",{title:"Important Step for Updating from Version 0.9.X to 1.0",type:"caution"},(0,l.kt)("pre",{parentName:"admonition"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo rm -rf /var/www/ctrlpanel/vendor\n"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"apt install php8.3-redis\nsudo composer install --no-dev --optimize-autoloader\n")),(0,l.kt)("h2",{id:"updating-the-database"},"Updating the Database"),(0,l.kt)("p",null,"Make sure you have a ",(0,l.kt)("em",{parentName:"p"},"working")," backup of your database. A Guide can be found ",(0,l.kt)("a",{parentName:"p",href:"/docs/Guides/backups"},"here")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo php artisan migrate --seed --force\n")),(0,l.kt)("admonition",{title:"Important Step for Updating from Version 0.9.X to 1.0",type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"Version 1.0 introduces a new permissions system. You will need to seed the permissions table."),(0,l.kt)("pre",{parentName:"admonition"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan db:seed --class=PermissionsSeeder\n"))),(0,l.kt)("h2",{id:"clear-compiled-template-cache"},"Clear Compiled Template Cache"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo php artisan view:clear\nsudo php artisan config:clear\n")),(0,l.kt)("h2",{id:"set-permissions"},"Set Permissions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# If using NGINX or Apache (not on CentOS):\nsudo chown -R www-data:www-data /var/www/ctrlpanel/\n\n# If using NGINX on CentOS:\nsudo chown -R nginx:nginx /var/www/ctrlpanel/\n\n# If using Apache on CentOS\nsudo chown -R apache:apache /var/www/ctrlpanel/\n")),(0,l.kt)("h2",{id:"restarting-queue-workers"},"Restarting Queue Workers"),(0,l.kt)("p",null,"After every update, you should restart the queue worker to ensure that the new code is loaded in and used."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo php artisan queue:restart\n")),(0,l.kt)("h2",{id:"disable-maintenance-mode"},"Disable Maintenance Mode"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo php artisan up\n")),(0,l.kt)("h2",{id:"disclaimer"},"Disclaimer"),(0,l.kt)("p",null,"If you notice any bugs \ud83d\udc1b or would like something to be improved or added, let us know by making a ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/CtrlPanel-gg/panel/issues/new/choose"},"GitHub Issue"),".",(0,l.kt)("br",null)," ",(0,l.kt)("strong",{parentName:"p"},"For any major security risk, create")," ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/Ctrlpanel-gg/panel/security/advisories/new"},"GitHub vulnerability report"),". Avoid discussing vulnerabilities in public chats, and also do not create reports on public trackers!"))}h.isMDXComponent=!0}}]);