"use strict";(self.webpackChunkctrlpanel=self.webpackChunkctrlpanel||[]).push([[4982],{2929:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Installation/getting-started","title":"Getting started","description":"DO NOT USE - DO NOT USE - DO NOT USE - DO NOT USE - DO NOT USE","source":"@site/versioned_docs/version-archive/Installation/getting-started.md","sourceDirName":"Installation","slug":"/Installation/getting-started","permalink":"/docs/archive/Installation/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/Ctrlpanel-gg/docs/tree/main/versioned_docs/version-archive/Installation/getting-started.md","tags":[],"version":"archive","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/archive/"},"next":{"title":"Upgrading from v0.8","permalink":"/docs/archive/Installation/upgrading-from-0.8"}}');var a=t(4848),i=t(8453),r=t(4252);const o={sidebar_position:1},l="Getting started",c={},d=[{value:"Dependencies",id:"dependencies",level:2},{value:"Example Dependency Installation",id:"example-dependency-installation",level:3},{value:"Installing Composer",id:"installing-composer",level:3},{value:"Download Files",id:"download-files",level:2},{value:"Basic Setup",id:"basic-setup",level:2},{value:"Database Setup",id:"database-setup",level:3},{value:"Web server Configuration",id:"web-server-configuration",level:2},{value:"How to add this config",id:"how-to-add-this-config",level:2},{value:"Example Nginx Config",id:"example-nginx-config",level:3},{value:"Enable Configuration",id:"enable-configuration",level:3},{value:"Adding SSL",id:"adding-ssl",level:3},{value:"Panel Installation",id:"panel-installation",level:2},{value:"Creating a Storage Symlink",id:"creating-a-storage-symlink",level:3},{value:"Set Permissions",id:"set-permissions",level:3},{value:"Connect Pterodactyl",id:"connect-pterodactyl",level:3},{value:"Queue Listeners",id:"queue-listeners",level:2},{value:"Crontab Configuration",id:"crontab-configuration",level:3},{value:"Create Queue Worker",id:"create-queue-worker",level:3}];function h(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"getting-started",children:"Getting started"})}),"\n",(0,a.jsxs)(n.admonition,{type:"warning",children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"DO NOT USE - DO NOT USE - DO NOT USE - DO NOT USE - DO NOT USE"})}),(0,a.jsx)(n.p,{children:"THESE DOCS ARE NOT FOR USE AS OF YET."}),(0,a.jsx)(n.p,{children:"PLEASE REFER TO THE v0.8 DOCS."}),(0,a.jsx)(n.p,{children:"VERSION 1.0 IS NOT RELEASED YET AND THESE DOCS ARE JUST A PLACEHOLDER"})]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"It is recommended that you have some sort of Linux and MariaDB experience before installing this."})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:'If you already have Ctrlpanel Installed and want to Upgrade to v1.0 please refer to "Upgrading from v0.8"'})}),"\n","\n",(0,a.jsx)(r.A,{toc:d}),"\n",(0,a.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["PHP ",(0,a.jsx)(n.code,{children:"8.1"})," with the following extensions: ",(0,a.jsx)(n.code,{children:"cli"}),", ",(0,a.jsx)(n.code,{children:"openssl"}),", ",(0,a.jsx)(n.code,{children:"gd"}),", ",(0,a.jsx)(n.code,{children:"mysql"}),", ",(0,a.jsx)(n.code,{children:"PDO"}),", ",(0,a.jsx)(n.code,{children:"mbstring"}),", ",(0,a.jsx)(n.code,{children:"tokenizer"}),", ",(0,a.jsx)(n.code,{children:"bcmath"}),", ",(0,a.jsx)(n.code,{children:"xml"})," or ",(0,a.jsx)(n.code,{children:"dom"}),", ",(0,a.jsx)(n.code,{children:"curl"}),", ",(0,a.jsx)(n.code,{children:"zip"}),", and ",(0,a.jsx)(n.code,{children:"fpm"})," if you are planning to use NGINX."]}),"\n",(0,a.jsxs)(n.li,{children:["MySQL ",(0,a.jsx)(n.code,{children:"5.7.22"})," or higher (MySQL ",(0,a.jsx)(n.code,{children:"8"})," recommended) ",(0,a.jsx)(n.strong,{children:"or"})," MariaDB ",(0,a.jsx)(n.code,{children:"10.2"})," or higher."]}),"\n",(0,a.jsxs)(n.li,{children:["Redis (",(0,a.jsx)(n.code,{children:"redis-server"}),")"]}),"\n",(0,a.jsx)(n.li,{children:"A web server (Apache, NGINX, Caddy, etc.)"}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"curl"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"tar"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"unzip"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"git"})}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"composer"})," v2"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"example-dependency-installation",children:"Example Dependency Installation"}),"\n",(0,a.jsx)(n.p,{children:"The commands below are simply an example of how you might install these dependencies. Please consult with your\noperating system's package manager to determine the correct packages to install."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Add "add-apt-repository" command\napt -y install software-properties-common curl apt-transport-https ca-certificates gnupg\n\n# Add additional repositories for PHP, Redis, and MariaDB\nLC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php\nadd-apt-repository -y ppa:chris-lea/redis-server\ncurl -sS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | sudo bash\n\n# Update repositories list\napt update\n\n# Add universe repository if you are on Ubuntu 18.04\napt-add-repository universe\n\n# Install Dependencies\napt -y install php8.1 php8.1-{cli,gd,mysql,pdo,mbstring,tokenizer,bcmath,xml,fpm,curl,zip,intl} mariadb-server nginx tar unzip git redis-server\n'})}),"\n",(0,a.jsx)(n.h3,{id:"installing-composer",children:"Installing Composer"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"If you already have Pterodactyl installed, you can skip this step!"})}),"\n",(0,a.jsx)(n.p,{children:"Composer is a dependency manager for PHP that allows us to ship everything you'll need code wise to operate the Panel. You'll\nneed composer installed before continuing in this process."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer\n"})}),"\n",(0,a.jsx)(n.h2,{id:"download-files",children:"Download Files"}),"\n",(0,a.jsx)(n.p,{children:"The first step in this process is to create the folder where the panel will live and then move ourselves into that\nnewly created folder. Below is an example of how to perform this operation."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir -p /var/www/controlpanel && cd /var/www/controlpanel\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/AVMG20/controlpanel.git ./\n"})}),"\n",(0,a.jsx)(n.h2,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,a.jsx)(n.p,{children:"Now that all the files have been downloaded we need to configure some core aspects of the Panel."}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"You will need a database setup and a database user with the correct permissions created for that database before"}),"\n",(0,a.jsx)(n.strong,{children:"continuing any further."})]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"database-setup",children:"Database Setup"}),"\n",(0,a.jsx)(n.p,{children:"To make a database and database user, you can follow this guide.\nThis is for MariaDB. Please change the USE_YOUR_OWN_PASSWORD part to your password. Also, 127.0.0.1 is for localhost. Please have basic knowledge of Linux before attempting this. Use at your own responsibility."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mysql -u root -p\nCREATE DATABASE controlpanel;\nCREATE USER 'controlpaneluser'@'127.0.0.1' IDENTIFIED BY 'USE_YOUR_OWN_PASSWORD';\nGRANT ALL PRIVILEGES ON controlpanel.* TO 'controlpaneluser'@'127.0.0.1';\nFLUSH PRIVILEGES;\nEXIT;\n"})}),"\n",(0,a.jsx)(n.h2,{id:"web-server-configuration",children:"Web server Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["You should paste the contents of the file below, replacing ",(0,a.jsx)(n.code,{children:"<domain>"})," with your domain name being used in a file called controlpanel.conf and place it in ",(0,a.jsx)(n.code,{children:"/etc/nginx/sites-available/"}),", or \u2014 if on CentOS, ",(0,a.jsx)(n.code,{children:"/etc/nginx/conf.d/."})]}),"\n",(0,a.jsx)(n.h2,{id:"how-to-add-this-config",children:"How to add this config"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"cd /etc/nginx/sites-available/\nnano ctrlpanel.conf\n"})}),"\n",(0,a.jsx)(n.h3,{id:"example-nginx-config",children:"Example Nginx Config"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-nginx",children:"server {\n        listen 80;\n        root /var/www/controlpanel/public;\n        index index.php index.html index.htm index.nginx-debian.html;\n        server_name YOUR.DOMAIN.COM;\n\n        location / {\n                try_files $uri $uri/ /index.php?$query_string;\n        }\n\n        location ~ \\.php$ {\n                include snippets/fastcgi-php.conf;\n                fastcgi_pass unix:/var/run/php/php8.0-fpm.sock;\n        }\n\n        location ~ /\\.ht {\n                deny all;\n        }\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"enable-configuration",children:"Enable Configuration"}),"\n",(0,a.jsx)(n.p,{children:"The final step is to enable your NGINX configuration and restart it."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# You do not need to symlink this file if you are using CentOS.\nsudo ln -s /etc/nginx/sites-available/ctrlpanel.conf /etc/nginx/sites-enabled/ctrlpanel.conf\n\n# Check for nginx errors\nsudo nginx -t\n\n# You need to restart nginx regardless of OS. only do this you haven't received any errors\nsystemctl restart nginx\n"})}),"\n",(0,a.jsx)(n.h3,{id:"adding-ssl",children:"Adding SSL"}),"\n",(0,a.jsx)(n.p,{children:"There are many ways to add SSL to your site. A simple solution is to use Cert bot from Let\u2019s Encrypt. Cert bot will automatically install the certificates for you and keep your SSL certifications up to date!"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo apt update\n#install certbot for nginx\nsudo apt install -y certbot\nsudo apt install -y python3-certbot-nginx\n#install certificates\nsudo certbot --nginx -d yourdomain.com\n"})}),"\n",(0,a.jsx)(n.h2,{id:"panel-installation",children:"Panel Installation"}),"\n",(0,a.jsxs)(n.p,{children:["First, we will have to install all composer packages and populate our Database.\nFor this, navigate into your ",(0,a.jsx)(n.code,{children:"/var/www/controlpanel"})," again and run the following commands"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"php artisan key:generate\nphp artisan migrate --seed --force\nphp artisan storage:link\ncomposer install --no-dev --optimize-autoloader\n"})}),"\n",(0,a.jsx)(n.h3,{id:"creating-a-storage-symlink",children:"Creating a Storage Symlink"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsxs)(n.em,{children:["Laravel requires a symbolic link to be created between the ",(0,a.jsx)(n.code,{children:"storage/app/public"})," directory and the ",(0,a.jsx)(n.code,{children:"public/storage"})," directory to properly serve uploaded files."]})}),"\n",(0,a.jsx)(n.p,{children:"To create this symlink, run the following command in the root of your Laravel project:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"php artisan storage:link\n"})}),"\n",(0,a.jsx)(n.h3,{id:"set-permissions",children:"Set Permissions"}),"\n",(0,a.jsx)(n.p,{children:"The last step in the installation process is to set the correct permissions on the Panel files so that the web server can\nuse them correctly."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# If using NGINX or Apache (not on CentOS):\nchown -R www-data:www-data /var/www/controlpanel/\nchmod -R 755 storage/* bootstrap/cache/\n\n# If using NGINX on CentOS:\nchown -R nginx:nginx /var/www/controlpanel/\nchmod -R 755 storage/* bootstrap/cache/\n\n# If using Apache on CentOS\nchown -R apache:apache /var/www/controlpanel/\nchmod -R 755 storage/* bootstrap/cache/\n\n****\n"})}),"\n",(0,a.jsx)(n.p,{children:"Once this is done, you should be able to access the dashboard via your web browser."}),"\n",(0,a.jsx)(n.h3,{id:"connect-pterodactyl",children:"Connect Pterodactyl"}),"\n",(0,a.jsx)(n.p,{children:"To Connect your Pterodactyl Instance run the following commmand"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd /var/www/controlpanel\nphp artisan s:pterodactyl:link\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This will ask you for your Pterodactyl URL (",(0,a.jsx)(n.a,{href:"https://your.ptero.com",children:"https://your.ptero.com"}),")",(0,a.jsx)("br",{}),"\nand also for your Pterodactyl API Key (",(0,a.jsx)(n.a,{href:"https://your.ptero.com/admin/api",children:"https://your.ptero.com/admin/api"}),")"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:'MAKE SURE THE KEY HAS ALL PERMISSIONS SET TO "READ & WRITE"!'})}),"\n",(0,a.jsx)(n.p,{children:"Once your Pterodactyl Instance is successfully connected, we can sync the Nodes, Eggs and Nests by running"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"php artisan s:pterodactyl:sync\n"})}),"\n",(0,a.jsx)(n.p,{children:"###First admin User\nNow lets create yourself! This is easily done by running"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"s:user:create\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The Console will ask for your Pterodactyl ID (which is usually 1). ",(0,a.jsx)("br",{}),"\nYou can grab that ID from your Userlist on Pterodactyl",(0,a.jsx)("br",{}),"\nInput your desired Password and the first user is ready to log-in!"]}),"\n",(0,a.jsx)(n.h2,{id:"queue-listeners",children:"Queue Listeners"}),"\n",(0,a.jsx)(n.h3,{id:"crontab-configuration",children:"Crontab Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["The first thing we need to do is create a new cron job that runs every minute to process specific Dashboard tasks such as billing users hourly and suspending unpaid servers. To open the crontab run: ",(0,a.jsx)(n.code,{children:"crontab -e"})," and paste the following configuration into crontab."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"* * * * * php /var/www/controlpanel/artisan schedule:run >> /dev/null 2>&1\n"})}),"\n",(0,a.jsx)(n.h3,{id:"create-queue-worker",children:"Create Queue Worker"}),"\n",(0,a.jsx)(n.p,{children:"Next, you need to create a new systemd worker to keep our queue process running in the background. This queue is responsible for sending emails and handling many other background tasks for the Dashboard."}),"\n",(0,a.jsxs)(n.p,{children:["Create a file called ",(0,a.jsx)(n.code,{children:"ctrlpanel.service"})," in ",(0,a.jsx)(n.code,{children:"/etc/systemd/system"})," with the contents below."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Ctrlpanel Queue Worker File\n# ----------------------------------\n\n[Unit]\nDescription=ctrlpanel Queue Worker\n\n[Service]\n# On some systems the user and group might be different.\n# Some systems use `apache` or `nginx` as the user and group.\nUser=www-data\nGroup=www-data\nRestart=always\nExecStart=/usr/bin/php /var/www/ctrlpanel/artisan queue:work --sleep=3 --tries=3\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,a.jsx)(n.p,{children:"Finally, enable the service and set it to boot on machine start."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable --now ctrlpanel.service\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},4252:(e,n,t)=>{t.d(n,{A:()=>r});t(6540);var s=t(5195);const a={tableOfContentsInline:"tableOfContentsInline_prmo"};var i=t(4848);function r({toc:e,minHeadingLevel:n,maxHeadingLevel:t}){return(0,i.jsx)("div",{className:a.tableOfContentsInline,children:(0,i.jsx)(s.A,{toc:e,minHeadingLevel:n,maxHeadingLevel:t,className:"table-of-contents",linkClassName:null})})}},5195:(e,n,t)=>{t.d(n,{A:()=>g});var s=t(6540),a=t(6342);function i(e){const n=e.map(e=>({...e,parentIndex:-1,children:[]})),t=Array(7).fill(-1);n.forEach((e,n)=>{const s=t.slice(2,e.level);e.parentIndex=Math.max(...s),t[e.level]=n});const s=[];return n.forEach(e=>{const{parentIndex:t,...a}=e;t>=0?n[t].children.push(a):s.push(a)}),s}function r({toc:e,minHeadingLevel:n,maxHeadingLevel:t}){return e.flatMap(e=>{const s=r({toc:e.children,minHeadingLevel:n,maxHeadingLevel:t});return function(e){return e.level>=n&&e.level<=t}(e)?[{...e,children:s}]:s})}function o(e){const n=e.getBoundingClientRect();return n.top===n.bottom?o(e.parentNode):n}function l(e,{anchorTopOffset:n}){const t=e.find(e=>o(e).top>=n);if(t){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(o(t))?t:e[e.indexOf(t)-1]??null}return e[e.length-1]??null}function c(){const e=(0,s.useRef)(0),{navbar:{hideOnScroll:n}}=(0,a.p)();return(0,s.useEffect)(()=>{e.current=n?0:document.querySelector(".navbar").clientHeight},[n]),e}function d(e){const n=(0,s.useRef)(void 0),t=c();(0,s.useEffect)(()=>{if(!e)return()=>{};const{linkClassName:s,linkActiveClassName:a,minHeadingLevel:i,maxHeadingLevel:r}=e;function o(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(s),o=function({minHeadingLevel:e,maxHeadingLevel:n}){const t=[];for(let s=e;s<=n;s+=1)t.push(`h${s}.anchor`);return Array.from(document.querySelectorAll(t.join()))}({minHeadingLevel:i,maxHeadingLevel:r}),c=l(o,{anchorTopOffset:t.current}),d=e.find(e=>c&&c.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e));e.forEach(e=>{!function(e,t){t?(n.current&&n.current!==e&&n.current.classList.remove(a),e.classList.add(a),n.current=e):e.classList.remove(a)}(e,e===d)})}return document.addEventListener("scroll",o),document.addEventListener("resize",o),o(),()=>{document.removeEventListener("scroll",o),document.removeEventListener("resize",o)}},[e,t])}var h=t(8774),p=t(4848);function u({toc:e,className:n,linkClassName:t,isChild:s}){return e.length?(0,p.jsx)("ul",{className:s?void 0:n,children:e.map(e=>(0,p.jsxs)("li",{children:[(0,p.jsx)(h.A,{to:`#${e.id}`,className:t??void 0,dangerouslySetInnerHTML:{__html:e.value}}),(0,p.jsx)(u,{isChild:!0,toc:e.children,className:n,linkClassName:t})]},e.id))}):null}const m=s.memo(u);function g({toc:e,className:n="table-of-contents table-of-contents__left-border",linkClassName:t="table-of-contents__link",linkActiveClassName:o,minHeadingLevel:l,maxHeadingLevel:c,...h}){const u=(0,a.p)(),g=l??u.tableOfContents.minHeadingLevel,x=c??u.tableOfContents.maxHeadingLevel,f=function({toc:e,minHeadingLevel:n,maxHeadingLevel:t}){return(0,s.useMemo)(()=>r({toc:i(e),minHeadingLevel:n,maxHeadingLevel:t}),[e,n,t])}({toc:e,minHeadingLevel:g,maxHeadingLevel:x});return d((0,s.useMemo)(()=>{if(t&&o)return{linkClassName:t,linkActiveClassName:o,minHeadingLevel:g,maxHeadingLevel:x}},[t,o,g,x])),(0,p.jsx)(m,{toc:f,className:n,linkClassName:t,...h})}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(6540);const a={},i=s.createContext(a);function r(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);